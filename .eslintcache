[{"H:\\bl-cg\\React\\employee-payroll\\src\\index.js":"1","H:\\bl-cg\\React\\employee-payroll\\src\\reportWebVitals.js":"2","H:\\bl-cg\\React\\employee-payroll\\src\\App.js":"3","H:\\bl-cg\\React\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx":"4","H:\\bl-cg\\React\\employee-payroll\\src\\services\\employee-service.js":"5","H:\\bl-cg\\React\\employee-payroll\\src\\config\\config.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":367,"mtime":1608263567550,"results":"10","hashOfConfig":"8"},{"size":14474,"mtime":1608340674602,"results":"11","hashOfConfig":"8"},{"size":245,"mtime":1608311045103,"results":"12","hashOfConfig":"8"},{"size":61,"mtime":1608341592602,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1p9mzqt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\bl-cg\\React\\employee-payroll\\src\\index.js",[],["28","29"],"H:\\bl-cg\\React\\employee-payroll\\src\\reportWebVitals.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\App.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx",["30","31","32","33","34","35","36","37","38","39"],"import React,{useState, useEffect} from \"react\";\r\nimport profile1 from '../../assets/profile-images/Ellipse -3.png';\r\nimport profile2 from '../../assets/profile-images/Ellipse 1.png';\r\nimport profile3 from '../../assets/profile-images/Ellipse -8.png';\r\nimport profile4 from '../../assets/profile-images/Ellipse -7.png';\r\nimport logo from '../../assets/images/logo.png';\r\nimport '../payroll-form/payroll-form.scss';\r\nimport {useParam, link, withRouter } from 'react-router-dom';\r\nimport EmployeeService from '../../services/employee-service';\r\n\r\nconst PayrollForm = (props) => {\r\n    let initialValue = {\r\n        name: '',\r\n        profileArray:[\r\n            {url: '../../../assets/profile-images/Ellipse -3.png'},\r\n            {url: '../../../assets/profile-images/Ellipse 1.png'},\r\n            {url: '../../../assets/profile-images/Ellipse -8.png'},\r\n            {url: '../../../assets/profile-images/Ellipse -7.png'},\r\n        ],\r\n        allDepartment:[\r\n            'HR','Sales','Finance','Engineer','Others'\r\n        ],\r\n        departmentValue: [],\r\n        gender:'',\r\n        salary: '',\r\n        day:'1',\r\n        month: 'Jan',\r\n        year: '2020',\r\n        startDate: '',\r\n        notes: '',\r\n        id: '',\r\n        profileUrl:'',\r\n        isUpdate: false,\r\n        error: {\r\n            department :'',\r\n            name:'',\r\n            gender:'',\r\n            salary:'',\r\n            profileUrl:'',\r\n            startDate:''\r\n        }\r\n    }\r\n    const [formValue, setForm] = useState(initialValue);\r\n\r\n    const changeValue = (event) => {\r\n        setForm({...formValue, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const onCheckChange = (name) => {\r\n        let index = formValue.departmentValue.indexOf(name);\r\n        let checkArray = [...formValue.departmentValue]\r\n        if(index > -1)\r\n            checkArray.splice(index, 1)\r\n        else\r\n            checkArray.push(name);\r\n        setForm({...formValue, departmentValue: checkArray});\r\n    }\r\n\r\n    const getChecked = (name) => {\r\n        return formValue.departmentValue && formValue.departmentValue.includes(name);\r\n    }\r\n\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            department: '',\r\n            name : '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate : ''\r\n        }\r\n        if(formValue.name.length < 1){\r\n            error.name = 'name is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.gender.length < 1){\r\n            error.gender = 'gender is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.salary.length <1 ){\r\n            error.salary = 'salary is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.profileUrl.length <1){\r\n            error.profileUrl = 'profile is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.departmentValue.length <1){\r\n            error.department = 'department is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.notes.length<1){\r\n            error.notes = 'notes is required field'\r\n            isError = true;\r\n        }\r\n        await setForm({...formValue, error: error});\r\n        return isError;\r\n\r\n    }\r\n\r\n     let employeeService = new EmployeeService();\r\n    const save = async (event) => {\r\n        event.preventDefault();\r\n        let object  = {\r\n            name: formValue.name,\r\n            department: formValue.departmentValue,\r\n            gender: formValue.gender,\r\n            salary: formValue.salary,\r\n            startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n            notes: formValue.notes,\r\n            id: formValue.id,\r\n            profileUrl : formValue.profileUrl,\r\n\r\n        }\r\n\r\n        employeeService.addEmployee(object).then(data => {\r\n            console.log(\"data added\");\r\n            props.history.push('')\r\n        }).catch(err => {\r\n            console.log(\"err while Add\");\r\n        })\r\n    }\r\n\r\n    const reset = () => {\r\n        setForm({ ...initialValue, id: formValue.id, isUpdate: formValue.isUpdate});\r\n        console.log(formValue);\r\n    }\r\n    return(\r\n            <div className=\"payroll-main\">\r\n                <header className=\"header row center\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\"/>\r\n                        <div>\r\n                            <span className=\"emp-text\">EMPLOYEE</span>\r\n                            <span className=\"emp-text emp-payroll\">PAYROLL</span>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"content\">\r\n                    <form className=\"form\" action=\"#\" onSubmit={save}>\r\n                        <div className=\"form-head\">Employee Payroll form</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"name\" className=\"label text\">Name</label>\r\n                            <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name..\" />\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.name}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"profileUrl\" className=\"label text\">Profile image</label>\r\n                            <div className=\"profile-radio-button\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -3.png'} \r\n                                    value=\"../../assets/profile-images/Ellipse -3.png\" onChange={changeValue} />\r\n                                    <img className=\"profile\" src={profile1} alt=\"\" />\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse 1.png'}  \r\n                                    value=\"../../assets/profile-images/Ellipse 1.png\" onChange={changeValue} />\r\n                                    <img className=\"profile\" src={profile2} alt=\"\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -8.png'}\r\n                                    value=\"../../assets/profile-images/Ellipse -8.png\" onChange={changeValue}/>\r\n                                    <img className=\"profile\"  src={profile3} alt=\"\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -7.png'}\r\n                                    value=\"../../assets/profile-images/Ellipse -7.png\" onChange={changeValue}/>\r\n                                    <img className=\"profile\" src={profile4} alt=\"\" />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.profileUrl}</div>\r\n                        <div className=\"row\">\r\n                            <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                            <div>\r\n                                <input type=\"radio\" onChange={changeValue} name=\"gender\" id=\"male\" value=\"male\"/>\r\n                                <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                                <input type=\"radio\" name=\"gender\" onChange={changeValue} id=\"female\" value=\"female\"/>\r\n                                <label htmlFor=\"female\"  className=\"text\">Female</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.gender}</div>\r\n                        <div className=\"row\">\r\n                            <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                            <div>\r\n                                {formValue.allDepartment.map(item => (\r\n                                    <span key={item}>\r\n                                        <input type=\"checkbox\" className=\"checkbox\" onChange={() => onCheckChange(item)} name={item}\r\n                                        checked={getChecked(item)} value={item} />\r\n                                        <label className=\"label text\" htmlFor={item}>{item}</label>\r\n                                    </span>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.department}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"salary\" className=\"label text\">Salary</label>\r\n                            <input type=\"range\" name=\"salary\" id=\"salary\" onChange={changeValue} className=\"input\" min=\"300000\" max=\"500000\" step=\"100\" defaultValue=\"400000\"/>\r\n                        </div>\r\n                        <div className=\"error\"> {formValue.error.salary}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"startDate\" className=\"label text\" >Start Date</label>\r\n                            <div>\r\n                                <select name=\"day\" id=\"day\" onChange={changeValue}>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                </select>\r\n                                <select name=\"month\" id=\"month\" onChange={changeValue}>\r\n                                    <option value=\"Jan\">January</option>\r\n                                    <option value=\"Feb\">February</option>\r\n                                    <option value=\"Mar\">March</option>\r\n                                    <option value=\"Apr\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"Jun\">June</option>\r\n                                    <option value=\"Jul\">July</option>\r\n                                    <option value=\"Aug\">August</option>\r\n                                    <option value=\"Sept\">September</option>\r\n                                    <option value=\"Oct\">October</option>\r\n                                    <option value=\"Nov\">November</option>\r\n                                    <option value=\"Dec\">December</option>\r\n                                </select>\r\n                                <select name=\"year\" id=\"year\" onChange={changeValue}>\r\n                                    <option value=\"2016\">2016</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.startDate}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"notes\" className=\"label text\">Notes</label>\r\n                            <textarea name=\"notes\" onChange={changeValue} value={formValue.notes} id=\"notes\" className=\"input\" placeholder=\"\" style={{height:'100%'}}></textarea>\r\n                        </div>\r\n                        <div className=\"buttonParent\">\r\n                            <a className=\"resetButton button cancelButton\">Cancel</a>\r\n                            <div className=\"submit-react\">\r\n                                <button type=\"submit\" className=\"button submitButton\" id=\"submitButton\">{formValue.isUpdate ? \"update\":\"Submit\"}</button>\r\n                                <button type=\"button\" onClick={reset} className=\"resetButton button\">Reset</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default PayrollForm;","H:\\bl-cg\\React\\employee-payroll\\src\\services\\employee-service.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\config\\config.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":25,"nodeType":"46","messageId":"47","endLine":1,"endColumn":34},{"ruleId":"44","severity":1,"message":"48","line":8,"column":9,"nodeType":"46","messageId":"47","endLine":8,"endColumn":17},{"ruleId":"44","severity":1,"message":"49","line":8,"column":19,"nodeType":"46","messageId":"47","endLine":8,"endColumn":23},{"ruleId":"44","severity":1,"message":"50","line":8,"column":25,"nodeType":"46","messageId":"47","endLine":8,"endColumn":35},{"ruleId":"44","severity":1,"message":"51","line":63,"column":11,"nodeType":"46","messageId":"47","endLine":63,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":152,"column":104,"nodeType":"54","messageId":"55","endLine":152,"endColumn":106},{"ruleId":"52","severity":1,"message":"53","line":157,"column":104,"nodeType":"54","messageId":"55","endLine":157,"endColumn":106},{"ruleId":"52","severity":1,"message":"53","line":162,"column":104,"nodeType":"54","messageId":"55","endLine":162,"endColumn":106},{"ruleId":"52","severity":1,"message":"53","line":167,"column":104,"nodeType":"54","messageId":"55","endLine":167,"endColumn":106},{"ruleId":"56","severity":1,"message":"57","line":267,"column":29,"nodeType":"58","endLine":267,"endColumn":76},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParam' is defined but never used.","'link' is defined but never used.","'withRouter' is defined but never used.","'validData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]