[{"H:\\bl-cg\\React\\employee-payroll\\src\\index.js":"1","H:\\bl-cg\\React\\employee-payroll\\src\\reportWebVitals.js":"2","H:\\bl-cg\\React\\employee-payroll\\src\\App.js":"3","H:\\bl-cg\\React\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx":"4","H:\\bl-cg\\React\\employee-payroll\\src\\services\\employee-service.js":"5","H:\\bl-cg\\React\\employee-payroll\\src\\config\\config.js":"6","H:\\bl-cg\\React\\employee-payroll\\src\\services\\axios-service.js":"7","H:\\bl-cg\\React\\employee-payroll\\src\\components\\home-page\\home-page.jsx":"8","H:\\bl-cg\\React\\employee-payroll\\src\\components\\display\\display.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":711,"mtime":1608388878381,"results":"13","hashOfConfig":"11"},{"size":15973,"mtime":1608388919550,"results":"14","hashOfConfig":"11"},{"size":674,"mtime":1608377382851,"results":"15","hashOfConfig":"11"},{"size":77,"mtime":1608343944250,"results":"16","hashOfConfig":"11"},{"size":698,"mtime":1608342361689,"results":"17","hashOfConfig":"11"},{"size":2702,"mtime":1608386453926,"results":"18","hashOfConfig":"11"},{"size":2993,"mtime":1608386574680,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1p9mzqt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"H:\\bl-cg\\React\\employee-payroll\\src\\index.js",[],["42","43"],"H:\\bl-cg\\React\\employee-payroll\\src\\reportWebVitals.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\App.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx",["44","45","46","47","48","49","50","51","52"],"import React,{useState, useEffect, Component} from \"react\";\r\nimport profile1 from '../../assets/profile-images/Ellipse -3.png';\r\nimport profile2 from '../../assets/profile-images/Ellipse 1.png';\r\nimport profile3 from '../../assets/profile-images/Ellipse -8.png';\r\nimport profile4 from '../../assets/profile-images/Ellipse -7.png';\r\nimport logo from '../../assets/images/logo.png';\r\nimport '../payroll-form/payroll-form.scss';\r\nimport {useParams, Link, withRouter } from 'react-router-dom';\r\nimport EmployeeService from '../../services/employee-service';\r\n\r\nconst PayrollForm = (props) => {\r\n    let initialValue = {\r\n        name: '',\r\n        profileArray:[\r\n            {url: '../../../assets/profile-images/Ellipse -3.png'},\r\n            {url: '../../../assets/profile-images/Ellipse 1.png'},\r\n            {url: '../../../assets/profile-images/Ellipse -8.png'},\r\n            {url: '../../../assets/profile-images/Ellipse -7.png'},\r\n        ],\r\n        allDepartment:[\r\n            'HR','Sales','Finance','Engineer','Others'\r\n        ],\r\n        departmentValue: [],\r\n        gender:'',\r\n        salary: '',\r\n        day:'1',\r\n        month: 'Jan',\r\n        year: '2020',\r\n        startDate: '',\r\n        notes: '',\r\n        id: '',\r\n        profileUrl:'',\r\n        isUpdate: false,\r\n        error: {\r\n            department :'',\r\n            name:'',\r\n            gender:'',\r\n            salary:'',\r\n            profileUrl:'',\r\n            startDate:''\r\n        }\r\n    }\r\n    const [formValue, setForm] = useState(initialValue);\r\n\r\n    const params = useParams();\r\n    \r\n    useEffect(() => {\r\n        console.log(params);\r\n        if(params.id){\r\n            getDataById(params.id);\r\n        }\r\n    }, []);\r\n\r\n    const getDataById = (id) =>{\r\n        employeeService.getEmployee(id)\r\n        .then((data) =>{\r\n            console.log(\"data is \"+ data.data);\r\n            let obj = data.data;\r\n            setData(obj);\r\n        })\r\n        .catch( (err) => {\r\n            console.log(\"err is \"+ err);\r\n        });\r\n    };\r\n\r\n    const setData = (obj) => {\r\n        let array = obj.startDate.split(\" \");\r\n        setForm({\r\n            ...formValue,\r\n            ...obj,\r\n            departmentValue: obj.departments,\r\n            isUpdate : true,\r\n            name: obj.name,\r\n            salary: obj.salary,\r\n            profileUrl : obj.profilePic,\r\n            day: array[0],\r\n            month: array[1],\r\n            year: array[2],\r\n            gender: obj.gender,\r\n            notes: obj.note,\r\n        });\r\n    };\r\n\r\n    const changeValue = (event) => {\r\n        setForm({...formValue, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const onCheckChange = (name) => {\r\n        let index = formValue.departmentValue.indexOf(name);\r\n        let checkArray = [...formValue.departmentValue]\r\n        if(index > -1)\r\n            checkArray.splice(index, 1)\r\n        else\r\n            checkArray.push(name);\r\n        setForm({...formValue, departmentValue: checkArray});\r\n    }\r\n\r\n    const getChecked = (name) => {\r\n        return formValue.departmentValue && formValue.departmentValue.includes(name);\r\n    }\r\n\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            department: '',\r\n            name : '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate : ''\r\n        }\r\n        if(formValue.name.length < 1){\r\n            error.name = 'name is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.gender.length < 1){\r\n            error.gender = 'gender is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.salary.length <1 ){\r\n            error.salary = 'salary is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.profileUrl.length <1){\r\n            error.profileUrl = 'profile is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.departmentValue.length <1){\r\n            error.department = 'department is required field'\r\n            isError = true;\r\n        }\r\n        if(formValue.notes.length<1){\r\n            error.notes = 'notes is required field'\r\n            isError = true;\r\n        }\r\n        await setForm({...formValue, error: error});\r\n        return isError;\r\n\r\n    }\r\n\r\n     let employeeService = new EmployeeService();\r\n    const save = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(await validData()){\r\n            console.log(\"error\",formValue);\r\n            return;\r\n        }else{\r\n        let object  = {\r\n            name: formValue.name,\r\n            departments: formValue.departmentValue,\r\n            gender: formValue.gender,\r\n            salary: formValue.salary,\r\n            startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n            note : formValue.notes,\r\n            profilePic : formValue.profileUrl,\r\n        };\r\n\r\n        if(formValue.isUpdate){\r\n            employeeService.updateEmployee(object)\r\n            .then( (data) => {\r\n                alert(\"Data updated successfully!\")\r\n                props.history.push(\"/home\");\r\n            })\r\n            .catch( (error) => {\r\n                console.log(\"Error after update\"+error);\r\n            })\r\n        } else{\r\n        employeeService.addEmployee(object).then(data => {\r\n            console.log(\"data added successfully\");\r\n            props.history.push(\"/home\");\r\n        }).catch(err => {\r\n            console.log(\"error after Add data\");\r\n        });\r\n    }\r\n    }\r\n    }\r\n\r\n    const reset = () => {\r\n        setForm({ ...initialValue, id: formValue.id, isUpdate: formValue.isUpdate});\r\n        console.log(formValue);\r\n    }\r\n    return(\r\n            <div className=\"payroll-main\">\r\n                <header className=\"header row center\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\"/>\r\n                        <div>\r\n                            <span className=\"emp-text\">EMPLOYEE</span>\r\n                            <span className=\"emp-text emp-payroll\">PAYROLL</span>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"content\">\r\n                    <form className=\"form\" action=\"#\" onSubmit={save}>\r\n                        <div className=\"form-head\">Employee Payroll form</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"name\" className=\"label text\">Name</label>\r\n                            <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name..\" />\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.name}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"profileUrl\" className=\"label text\">Profile image</label>\r\n                            <div className=\"profile-radio-button\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -3.png'} \r\n                                    value=\"../../assets/profile-images/Ellipse -3.png\" onChange={changeValue} />\r\n                                    <img className=\"profile\" src={profile1} alt=\"\" />\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse 1.png'}  \r\n                                    value=\"../../assets/profile-images/Ellipse 1.png\" onChange={changeValue} />\r\n                                    <img className=\"profile\" src={profile2} alt=\"\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -8.png'}\r\n                                    value=\"../../assets/profile-images/Ellipse -8.png\" onChange={changeValue}/>\r\n                                    <img className=\"profile\"  src={profile3} alt=\"\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -7.png'}\r\n                                    value=\"../../assets/profile-images/Ellipse -7.png\" onChange={changeValue}/>\r\n                                    <img className=\"profile\" src={profile4} alt=\"\" />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.profileUrl}</div>\r\n                        <div className=\"row\">\r\n                            <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                            <div>\r\n                                <input type=\"radio\" onChange={changeValue} name=\"gender\" id=\"male\" value=\"male\"/>\r\n                                <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                                <input type=\"radio\" name=\"gender\" onChange={changeValue} id=\"female\" value=\"female\"/>\r\n                                <label htmlFor=\"female\"  className=\"text\">Female</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.gender}</div>\r\n                        <div className=\"row\">\r\n                            <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                            <div>\r\n                                {formValue.allDepartment.map(item => (\r\n                                    <span key={item}>\r\n                                        <input type=\"checkbox\" className=\"checkbox\" onChange={() => onCheckChange(item)} name={item}\r\n                                        checked={getChecked(item)} value={item} />\r\n                                        <label className=\"label text\" htmlFor={item}>{item}</label>\r\n                                    </span>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.department}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"salary\" className=\"label text\">Salary</label>\r\n                            <input type=\"range\" name=\"salary\" id=\"salary\" onChange={changeValue} className=\"input\" min=\"300000\" max=\"500000\" step=\"100\" defaultValue=\"400000\"/>\r\n                        </div>\r\n                        <div className=\"error\"> {formValue.error.salary}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"startDate\" className=\"label text\" >Start Date</label>\r\n                            <div>\r\n                                <select name=\"day\" id=\"day\" onChange={changeValue}>\r\n                                    <option value=\"1\">01</option>\r\n                                    <option value=\"2\">02</option>\r\n                                    <option value=\"3\">03</option>\r\n                                    <option value=\"4\">04</option>\r\n                                    <option value=\"5\">05</option>\r\n                                    <option value=\"6\">06</option>\r\n                                    <option value=\"7\">07</option>\r\n                                    <option value=\"8\">08</option>\r\n                                    <option value=\"9\">09</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                </select>\r\n                                <select name=\"month\" id=\"month\" onChange={changeValue}>\r\n                                    <option value=\"Jan\">January</option>\r\n                                    <option value=\"Feb\">February</option>\r\n                                    <option value=\"Mar\">March</option>\r\n                                    <option value=\"Apr\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"Jun\">June</option>\r\n                                    <option value=\"Jul\">July</option>\r\n                                    <option value=\"Aug\">August</option>\r\n                                    <option value=\"Sept\">September</option>\r\n                                    <option value=\"Oct\">October</option>\r\n                                    <option value=\"Nov\">November</option>\r\n                                    <option value=\"Dec\">December</option>\r\n                                </select>\r\n                                <select name=\"year\" id=\"year\" onChange={changeValue}>\r\n                                    <option value=\"2016\">2016</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{formValue.error.startDate}</div>\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"notes\" className=\"label text\">Notes</label>\r\n                            <textarea name=\"notes\" onChange={changeValue} value={formValue.notes} id=\"notes\" className=\"input\" placeholder=\"\" style={{height:'100%'}}></textarea>\r\n                        </div>\r\n                        <div className=\"buttonParent\">\r\n                            <a className=\"resetButton button cancelButton\">Cancel</a>\r\n                            <div className=\"submit-react\">\r\n                                <button type=\"submit\" className=\"button submitButton\" id=\"submitButton\">{formValue.isUpdate ? \"update\":\"Submit\"}</button>\r\n                                <button type=\"button\" onClick={reset} className=\"resetButton button\">Reset</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default PayrollForm;","H:\\bl-cg\\React\\employee-payroll\\src\\services\\employee-service.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\config\\config.js",[],["53","54"],"H:\\bl-cg\\React\\employee-payroll\\src\\services\\axios-service.js",[],"H:\\bl-cg\\React\\employee-payroll\\src\\components\\home-page\\home-page.jsx",["55"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Display from '../display/display';\r\nimport logo from '../../assets/images/logo.png';\r\nimport addIcon from '../../assets/icons/add-24px.svg';\r\nimport './home-page.scss';\r\nimport EmployeeService from '../../services/employee-service';\r\n\r\nclass HomePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchExpand: false,\r\n            employeeArray: [],\r\n            AllEmployeeArray: [],\r\n        };\r\n        this.employeeService = new EmployeeService();\r\n    }\r\n    openSearch = () => {\r\n        this.setState({ searchExpand: true});\r\n    }\r\n    componentDidMount(){\r\n        this.getAllEmployee();\r\n    }\r\n\r\n    getAllEmployee = () => {\r\n        this.employeeService\r\n            .getAllEmployee()\r\n            .then((data) =>{\r\n                console.log(\"data after get \"+data.data);\r\n                this.setState({\r\n                    employeeArray: data.data,\r\n                    AllEmployeeArray: data.data,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err after \",err);\r\n            });\r\n    };\r\n    \r\n    search = async (event) => {\r\n        let search = event.target.value;\r\n        await this.setState({employeeArray: this.state.AllEmployeeArray});\r\n        let empArray = this.state.employeeArray;\r\n        if(search.trim().length > 0)\r\n            empArray = empArray.filter( (element) => element.name.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n            );\r\n        this.setState({employeeArray: empArray});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"column content\">\r\n                <div className=\"emp-detail\">\r\n                    <div className=\"detail-text\">\r\n                        Employee Details <div className=\"count\"></div>\r\n                    </div>\r\n                <div className=\"row center button-box\">\r\n                    <div className='search-box' onClick={this.openSearch}>\r\n                        <input type=\"text\" name=\"\" id=\"\" className={\"input \"+(this.state.searchExpand && 'input-expand')}\r\n                         onChange={this.search} placeholder=\"Search\" />\r\n                    </div>\r\n                    <Link to=\"payroll\" className=\"add-button flex-row-center\">\r\n                        <img src={addIcon} alt=\"\"/>Add User\r\n                    </Link>\r\n                </div>\r\n                </div>\r\n                <div className=\"table-main\">\r\n                    <Display employeeArray={this.state.employeeArray} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","H:\\bl-cg\\React\\employee-payroll\\src\\components\\display\\display.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":36,"nodeType":"62","messageId":"63","endLine":1,"endColumn":45},{"ruleId":"60","severity":1,"message":"64","line":8,"column":20,"nodeType":"62","messageId":"63","endLine":8,"endColumn":24},{"ruleId":"60","severity":1,"message":"65","line":8,"column":26,"nodeType":"62","messageId":"63","endLine":8,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":52,"column":8,"nodeType":"68","endLine":52,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":206,"column":104,"nodeType":"72","messageId":"73","endLine":206,"endColumn":106},{"ruleId":"70","severity":1,"message":"71","line":211,"column":104,"nodeType":"72","messageId":"73","endLine":211,"endColumn":106},{"ruleId":"70","severity":1,"message":"71","line":216,"column":104,"nodeType":"72","messageId":"73","endLine":216,"endColumn":106},{"ruleId":"70","severity":1,"message":"71","line":221,"column":104,"nodeType":"72","messageId":"73","endLine":221,"endColumn":106},{"ruleId":"74","severity":1,"message":"75","line":321,"column":29,"nodeType":"76","endLine":321,"endColumn":76},{"ruleId":"56","replacedBy":"77"},{"ruleId":"58","replacedBy":"78"},{"ruleId":"60","severity":1,"message":"79","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":12},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataById' and 'params'. Either include them or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["80"],["81"],"'logo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getDataById, params]",{"range":"85","text":"86"},[1706,1708],"[getDataById, params]"]